/*
Copyright 2020 IBM All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

// compile using
// protoc -I. -I$GOPATH/src/github.com/hyperledger/fabric-protos --go_out=plugins=grpc:. --go_opt=paths=source_relative protos/gateway.proto

syntax = "proto3";

option go_package = "github.com/hyperledger/fabric-gateway/gateway";
option java_multiple_files = true;
option java_package = "org.hyperledger.fabric.gateway";
option java_outer_classname = "GatewayProto";

package protos;

import "peer/proposal.proto";
import "common/common.proto";

service Gateway {
    rpc Endorse(ProposedTransaction) returns (PreparedTransaction) {}
    rpc Submit(PreparedTransaction) returns (stream Event) {}
    rpc Evaluate(ProposedTransaction) returns (Result) {}
}

// The value that is returned by the transaction function
message Result {
    bytes value = 1;
}

// The signed proposal ready for endorsement plus any processing options
message ProposedTransaction {
    SignedProposal proposal = 1;
    string txId = 2;
    string channelId = 3;
}

// The set of transaction responses from the endorsing peers for signing by the client
// before submitting to ordering service (via gateway)
message PreparedTransaction {
    common.Envelope envelope = 1;
    Result response = 2;
    string txId = 3;
    string channelId = 4;
}

message Event {
    bytes value = 1;
}